import Entities.Enfant;
import Entities.Jardin;import Services.ServiceJardin;
import com.codename1.components.MultiButton;
import com.codename1.components.ScaleImageLabel;
import com.codename1.components.SpanLabel;
import com.codename1.components.ToastBar;
import com.codename1.notifications.LocalNotification;
import com.codename1.ui.Button;
import com.codename1.ui.ButtonGroup;
import com.codename1.ui.ComboBox;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.Dialog;
import com.codename1.ui.Display;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.Font;
import com.codename1.ui.FontImage;
import com.codename1.ui.Graphics;
import com.codename1.ui.Image;
import com.codename1.ui.Label;
import com.codename1.ui.RadioButton;
import com.codename1.ui.Slider;
import com.codename1.ui.Tabs;
import com.codename1.ui.TextArea;
import com.codename1.ui.Toolbar;
import com.codename1.ui.URLImage;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.geom.Dimension;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.GridLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.list.ContainerList;
import com.codename1.ui.list.GenericListCellRenderer;
import com.codename1.ui.plaf.Border;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.util.Resources;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/**
 * The newsfeed form
 *
 * @author Shai Almog
 */
public class ListeJardinForm extends BaseForm {

    public ListeJardinForm(Resources res) {

        Toolbar tb = new Toolbar(true);
        setToolbar(tb);
        getTitleArea().setUIID("Container");
        setTitle("");
        getContentPane().setScrollVisible(false);

        super.addSideMenu(res);

        Tabs swipe = new Tabs();

        Label spacer1 = new Label();
        Label spacer2 = new Label();
        addTab(swipe, res.getImage("BG2.jpg"), spacer1, "15 Likes  ", "85 Comments", "Integer ut placerat purued non dignissim neque. ");
        addTab(swipe, res.getImage("BG1.jpg"), spacer2, "100 Likes  ", "66 Comments", "Dogs are cute: story at 11");

        swipe.setUIID("Container");
        swipe.getContentPane().setUIID("Container");
        swipe.hideTabs();

        ButtonGroup bg = new ButtonGroup();
        int size = Display.getInstance().convertToPixels(1);
        Image unselectedWalkthru = Image.createImage(size, size, 0);
        Graphics g = unselectedWalkthru.getGraphics();
        g.setColor(0xffffff);
        g.setAlpha(100);
        g.setAntiAliased(true);
        g.fillArc(0, 0, size, size, 0, 360);
        Image selectedWalkthru = Image.createImage(size, size, 0);
        g = selectedWalkthru.getGraphics();
        g.setColor(0xffffff);
        g.setAntiAliased(true);
        g.fillArc(0, 0, size, size, 0, 360);
        RadioButton[] rbs = new RadioButton[swipe.getTabCount()];
        FlowLayout flow = new FlowLayout(CENTER);
        flow.setValign(BOTTOM);
        Container radioContainer = new Container(flow);
        for (int iter = 0; iter < rbs.length; iter++) {
            rbs[iter] = RadioButton.createToggle(unselectedWalkthru, bg);
            rbs[iter].setPressedIcon(selectedWalkthru);
            rbs[iter].setUIID("Label");
            radioContainer.add(rbs[iter]);
        }

        rbs[0].setSelected(true);
        swipe.addSelectionListener((i, ii) -> {
            if (!rbs[ii].isSelected()) {
                rbs[ii].setSelected(true);
            }
        });

        Component.setSameSize(radioContainer, spacer1, spacer2);
        add(LayeredLayout.encloseIn(swipe, radioContainer));

        SpanLabel lNom = new SpanLabel("Liste des Jardins");
        lNom.getStyle().setFgColor(0x1e3642);
        Font smallPlainSystemFont = Font.createSystemFont(Font.FACE_SYSTEM, Font.STYLE_BOLD, Font.SIZE_LARGE);
        lNom.getStyle().setFont(smallPlainSystemFont);
        add(lNom);

        /*
        ButtonGroup barGroup = new ButtonGroup();
        RadioButton all = RadioButton.createToggle("All", barGroup);
        all.setUIID("SelectBar");
        RadioButton featured = RadioButton.createToggle("Featured", barGroup);
        featured.setUIID("SelectBar");
        RadioButton popular = RadioButton.createToggle("Popular", barGroup);
        popular.setUIID("SelectBar");
        RadioButton myFavorite = RadioButton.createToggle("My Favorites", barGroup);
        myFavorite.setUIID("SelectBar");
        Label arrow = new Label(res.getImage("news-tab-down-arrow.png"), "Container");
        
        add(LayeredLayout.encloseIn(
                GridLayout.encloseIn(4, all, featured, popular, myFavorite),
                FlowLayout.encloseBottom(arrow)
        ));
        
        all.setSelected(true);
        arrow.setVisible(false);
        addShowListener(e -> {
            arrow.setVisible(true);
            updateArrowPosition(all, arrow);
        });
        bindButtonSelection(all, arrow);
        bindButtonSelection(featured, arrow);
        bindButtonSelection(popular, arrow);
        bindButtonSelection(myFavorite, arrow);
        
        // special case for rotation
        addOrientationListener(e -> {
            updateArrowPosition(barGroup.getRadioButton(barGroup.getSelectedIndex()), arrow);
        });
         */
        for (Jardin j : ServiceJardin.getInstance().getAllJardins()) {
            Image img = null;
            try {
                img = Image.createImage("file:///C:/wamp64/www/JardinEnfant/web/uploads/" + j.getImage());
            } catch (IOException ex) {

            }
            addButton(img, j.getNom(), j.getId(), true, 26, 32, res);
            // addButton(res.getImage("news-item-2.jpg"), "Fusce ornare cursus masspretium tortor integer placera.", true, 15, 21);
            //  addButton(res.getImage("news-item-3.jpg"), "Maecenas eu risus blanscelerisque massa non amcorpe.", false, 36, 15);
            //   addButton(res.getImage("news-item-4.jpg"), "Pellentesque non lorem diam. Proin at ex sollicia.", false, 11, 9);
        }
    }

  

    private void updateArrowPosition(Button b, Label arrow) {
        arrow.getUnselectedStyle().setMargin(LEFT, b.getX() + b.getWidth() / 2 - arrow.getWidth() / 2);
        arrow.getParent().repaint();

    }

    private void addTab(Tabs swipe, Image img, Label spacer, String likesStr, String commentsStr, String text) {
        int size = Math.min(Display.getInstance().getDisplayWidth(), Display.getInstance().getDisplayHeight());
        if (img.getHeight() < size) {
            img = img.scaledHeight(size);
        }
        Label likes = new Label(likesStr);
        Style heartStyle = new Style(likes.getUnselectedStyle());
        heartStyle.setFgColor(0xff2d55);
        FontImage heartImage = FontImage.createMaterial(FontImage.MATERIAL_FAVORITE, heartStyle);
        likes.setIcon(heartImage);
        likes.setTextPosition(RIGHT);

        Label comments = new Label(commentsStr);
        FontImage.setMaterialIcon(comments, FontImage.MATERIAL_CHAT);
        if (img.getHeight() > Display.getInstance().getDisplayHeight() / 2) {
            img = img.scaledHeight(Display.getInstance().getDisplayHeight() / 2);
        }
        ScaleImageLabel image = new ScaleImageLabel(img);
        image.setUIID("Container");
        image.setBackgroundType(Style.BACKGROUND_IMAGE_SCALED_FILL);
        Label overlay = new Label(" ", "ImageOverlay");

        Container page1
                = LayeredLayout.encloseIn(
                        image,
                        overlay,
                        BorderLayout.south(
                                BoxLayout.encloseY(
                                        spacer
                                )
                        )
                );

        swipe.addTab("", page1);
    }

    @SuppressWarnings("empty-statement")
    private void addButton(Image img, String title, int id, boolean liked, int likeCount, int commentCount, Resources res) {
        int height = Display.getInstance().convertToPixels(11.5f);
        int width = Display.getInstance().convertToPixels(14f);
        Button image = new Button(img.fill(width, height));
        image.setUIID("Label");
        Container cn = BorderLayout.west(image);
        
        TextArea ta = new TextArea(title);
        ta.setUIID("NewsTopLine");
        ta.setEditable(false);

        Button likes = new Button("", "NewsBottomLine");
        FontImage.setMaterialIcon(likes, FontImage.MATERIAL_ADD);
        likes.setTextPosition(RIGHT);
        //if(!liked) {
        //  FontImage.setMaterialIcon(likes, FontImage.MATERIAL_FAVORITE);
        //} else {
        //   Style s = new Style(likes.getUnselectedStyle());
        //    s.setFgColor(0xff2d55);
        Slider starRank = new Slider();
        starRank.setEditable(false);
        starRank.setMinValue(0);
        starRank.setMaxValue(10);
        //Font fnt = Font.createTrueTypeFont("native:mainLight", "native:mainLight").
        //derive(Display.getInstance().convertToPixels(5, true), Font.STYLE_PLAIN);
        Style s = new Style(likes.getUnselectedStyle());
        Image fullStar = FontImage.createMaterial(FontImage.MATERIAL_STAR, s).toImage();
        s.setOpacity(100);
        s.setFgColor(0);
        FontImage heartImage = FontImage.createMaterial(FontImage.MATERIAL_STAR, s);
        initStarRankStyle(starRank.getSliderEmptySelectedStyle(), heartImage);
        initStarRankStyle(starRank.getSliderEmptyUnselectedStyle(), heartImage);
        initStarRankStyle(starRank.getSliderFullSelectedStyle(), fullStar);
        initStarRankStyle(starRank.getSliderFullUnselectedStyle(), fullStar);
        starRank.setPreferredSize(new Dimension(fullStar.getWidth() * 5, fullStar.getHeight()));
        Float rate = ServiceJardin.getInstance().getRate(id);

        starRank.setProgress(Math.round(rate));
         //  likes.setIcon(img);

//}
        Button reserver = new Button("Reserver", "NewsBottomLine");
     //   FontImage.setMaterialIcon(reserver, FontImage.MATERIAL_TAKEOUT_DINING);
        // reserver.setTextPosition(LEFT);

        cn.add(BorderLayout.CENTER,
                BoxLayout.encloseY(
                        ta,
                        BoxLayout.encloseX(likes,starRank, reserver)
                ));

        add(cn);
        ArrayList<String> nom_e = new ArrayList<String>();
        ArrayList<String> prenom_e = new ArrayList<String>();
        ArrayList<String> id_e = new ArrayList<String>();

        for (Enfant e : ServiceJardin.getInstance().getAllEnfants()) {
            id_e.add(e.getId() + "");
            nom_e.add(e.getNom());
            prenom_e.add(e.getPrenom());
        }

        String[] nom = new String[nom_e.size()];
        String[] prenom = new String[prenom_e.size()];
        String[] id_enfant = new String[id_e.size()];
        nom_e.toArray(nom);
        prenom_e.toArray(prenom);
        id_e.toArray(id_enfant);

        int size = Display.getInstance().convertToPixels(7);
        EncodedImage placeholder = EncodedImage.createFromImage(Image.createImage(size, size, 0xffcccccc), true);
   /*     Image[] pictures = {
            URLImage.createToStorage(placeholder, "tyrion", "http://i.lv3.hbo.com/assets/images/series/game-of-thrones/character/s5/tyrion-lannister-512x512.jpg"),
            URLImage.createToStorage(placeholder, "jaime", "http://i.lv3.hbo.com/assets/images/series/game-of-thrones/character/s5/jamie-lannister-512x512.jpg"),
            URLImage.createToStorage(placeholder, "cersei", "http://i.lv3.hbo.com/assets/images/series/game-of-thrones/character/s5/cersei-lannister-512x512.jpg")
        };*/
        reserver.addActionListener(e -> {
            Dialog d = new Dialog();
            d.setLayout(BoxLayout.y());
            d.getContentPane().setScrollableY(true);
            for (int iter = 0; iter < prenom_e.size(); iter++) {
                MultiButton mb = new MultiButton(prenom[iter]);

              //  mb.setTextLine2(prenom[iter]);
              //  mb.setTextLine2(id_enfant[iter]);
                Label l=new Label(id_enfant[iter]);
               // l.setHidden(false);
                mb.add(BorderLayout.WEST,l).setHidden(false);
               

//        mb.setIcon(pictures[iter]);
                d.add(mb);
                mb.addActionListener(ee -> {
                    //  reserver.setTextLine1(mb.getTextLine1());
                    //  reserver.setTextLine2(mb.getTextLine2());
                    //  reserver.setIcon(mb.getIcon());
                    // ToastBar.showMessage(ServiceJardin.getInstance().getReservation(id, mb.getTextLine3()), FontImage.MATERIAL_INFO);
                    String message = ServiceJardin.getInstance().getReservation(id, l.getText());
                    ServiceJardin.getInstance().sendMail("souha.azaiez@gmail.tn");
                    Dialog.show("Info", message, "OK",null);
                    try {
                Display.getInstance().sendSMS("+21627895020","reservation effectuée");
                 } catch (IOException ex) {
                     System.out.println("error sms : "+ex.getMessage());
            }
                    d.dispose();
                    // reserver.revalidate();
                });
            }
            d.showPopupDialog(reserver);
        });
          Jardin jardin=ServiceJardin.getInstance().getJardin(id);
        String detail_jardin="Nom : "+jardin.getNom()+ "\n" +"Description : "+jardin.getDescription()+ "\n"+"Address : "+jardin.getAddress()+"\n"+"Tel : "+jardin.getNumTel()+"\n"+"nombre enfant : "+jardin.getNbenfant()+"\n"+"places disponible : "+jardin.getPlacesDisponibles();
        image.addActionListener(e -> {
         ToastBar.showMessage(detail_jardin, FontImage.MATERIAL_INFO);

        });
        //image.addActionListener(e -> ToastBar.showMessage(title, FontImage.MATERIAL_INFO));
        likes.addActionListener(e -> {
            RatingWidget.bindRatingListener(res, 180, id, "apps@codenameone.com");

        });
          likes.addActionListener(e -> {
            RatingWidget.bindRatingListener(res, 180, id, "apps@codenameone.com");

        });
    }

  

    private void initStarRankStyle(Style s, Image star) {
        s.setBackgroundType(Style.BACKGROUND_IMAGE_TILE_BOTH);
        s.setBorder(Border.createEmpty());
        s.setBgImage(star);
        s.setBgTransparency(0);
    }

    private void bindButtonSelection(Button b, Label arrow) {
        b.addActionListener(e -> {
            if (b.isSelected()) {
                updateArrowPosition(b, arrow);
            }
        });
    }

   

  
}
