
package Gui;

import Entities.Enfant;
import Entities.Jardin;
import Services.ServiceJardin;
import com.codename1.components.MultiButton;
import com.codename1.components.ScaleImageLabel;
import com.codename1.components.SpanLabel;
import com.codename1.components.ToastBar;
import com.codename1.notifications.LocalNotification;
import com.codename1.ui.Button;
import com.codename1.ui.ButtonGroup;
import com.codename1.ui.ComboBox;
import com.codename1.ui.Component;
import com.codename1.ui.Container;
import com.codename1.ui.Dialog;
import com.codename1.ui.Display;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.Font;
import com.codename1.ui.FontImage;
import com.codename1.ui.Graphics;
import com.codename1.ui.Image;
import com.codename1.ui.Label;
import com.codename1.ui.RadioButton;
import com.codename1.ui.Slider;
import com.codename1.ui.Tabs;
import com.codename1.ui.TextArea;
import com.codename1.ui.Toolbar;
import com.codename1.ui.URLImage;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.geom.Dimension;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.GridLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.list.ContainerList;
import com.codename1.ui.list.GenericListCellRenderer;
import com.codename1.ui.plaf.Border;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.util.Resources;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;


/**
 * The newsfeed form
 *
 * @author Shai Almog
 */
public class ListeEnafantForm extends BaseForm {
    public static int id_enfant;

    public ListeEnafantForm(Resources res) {

        Toolbar tb = new Toolbar(true);
        setToolbar(tb);
        getTitleArea().setUIID("Container");
        setTitle("");
        getContentPane().setScrollVisible(false);
        tb.addMaterialCommandToRightBar("",FontImage.MATERIAL_ADD,(ActionListener  -> {
            
         
          new AjouterEnfantFrom(res).show();
             
            
        }));
        super.addSideMenu(res);

        Tabs swipe = new Tabs();

        Label spacer1 = new Label();
        Label spacer2 = new Label();
        //liste de toutes les enfants exsiste dans les jardins
         Image imge = null;
          for (Enfant e : ServiceJardin.getInstance().getAllEnfantsJardin()) {        
            try {
              // System.out.println(e.getImage());
                imge = Image.createImage("file:///C:/wamp64/www/JardinEnfant/web/uploads/"+e.getImage());
              
            } catch (IOException ex) {

            }

        addTab(swipe, imge, spacer1, "15 Likes  ", "85 Comments", "Integer ut placerat purued non dignissim neque. ");
          }
        swipe.setUIID("Container");
        swipe.getContentPane().setUIID("Container");
        swipe.hideTabs();

        ButtonGroup bg = new ButtonGroup();
        int size = Display.getInstance().convertToPixels(1);
        Image unselectedWalkthru = Image.createImage(size, size, 0);
        Graphics g = unselectedWalkthru.getGraphics();
        g.setColor(0xffffff);
        g.setAlpha(100);
        g.setAntiAliased(true);
        g.fillArc(0, 0, size, size, 0, 360);
        Image selectedWalkthru = Image.createImage(size, size, 0);
        g = selectedWalkthru.getGraphics();
        g.setColor(0xffffff);
        g.setAntiAliased(true);
        g.fillArc(0, 0, size, size, 0, 360);
        RadioButton[] rbs = new RadioButton[swipe.getTabCount()];
        FlowLayout flow = new FlowLayout(CENTER);
        flow.setValign(BOTTOM);
        Container radioContainer = new Container(flow);
        for (int iter = 0; iter < rbs.length; iter++) {
            rbs[iter] = RadioButton.createToggle(unselectedWalkthru, bg);
            rbs[iter].setPressedIcon(selectedWalkthru);
            rbs[iter].setUIID("Label");
            radioContainer.add(rbs[iter]);
        }

        rbs[0].setSelected(true);
        swipe.addSelectionListener((i, ii) -> {
            if (!rbs[ii].isSelected()) {
                rbs[ii].setSelected(true);
            }
        });

        Component.setSameSize(radioContainer, spacer1, spacer2);
        add(LayeredLayout.encloseIn(swipe, radioContainer));

        SpanLabel lNom = new SpanLabel("Liste des Enfants");
        lNom.getStyle().setFgColor(0x1e3642);
        Font smallPlainSystemFont = Font.createSystemFont(Font.FACE_SYSTEM, Font.STYLE_BOLD, Font.SIZE_LARGE);
        lNom.getStyle().setFont(smallPlainSystemFont);
        add(lNom);
        //liste des enfants pour parent
        for (Enfant e : ServiceJardin.getInstance().getAllEnfants()) {        
           Image img = null;
            try {
              // System.out.println(e.getImage());
                img = Image.createImage("file:///C:/wamp64/www/JardinEnfant/web/uploads/"+e.getImage());
              
            } catch (IOException ex) {

            }
            addButton(img, e.getNom(),e.getPrenom(), e.getId(), res);
           
        }
    }

  

    private void updateArrowPosition(Button b, Label arrow) {
        arrow.getUnselectedStyle().setMargin(LEFT, b.getX() + b.getWidth() / 2 - arrow.getWidth() / 2);
        arrow.getParent().repaint();

    }

    private void addTab(Tabs swipe, Image img, Label spacer, String likesStr, String commentsStr, String text) {
        int size = Math.min(Display.getInstance().getDisplayWidth(), Display.getInstance().getDisplayHeight());
        if (img.getHeight() < size) {
            img = img.scaledHeight(size);
        }
        Label likes = new Label(likesStr);
        Style heartStyle = new Style(likes.getUnselectedStyle());
        heartStyle.setFgColor(0xff2d55);
        FontImage heartImage = FontImage.createMaterial(FontImage.MATERIAL_FAVORITE, heartStyle);
        likes.setIcon(heartImage);
        likes.setTextPosition(RIGHT);

        Label comments = new Label(commentsStr);
        FontImage.setMaterialIcon(comments, FontImage.MATERIAL_CHAT);
        if (img.getHeight() > Display.getInstance().getDisplayHeight() / 2) {
            img = img.scaledHeight(Display.getInstance().getDisplayHeight() / 2);
        }
        ScaleImageLabel image = new ScaleImageLabel(img);
        image.setUIID("Container");
        image.setBackgroundType(Style.BACKGROUND_IMAGE_SCALED_FILL);
        Label overlay = new Label(" ", "ImageOverlay");

        Container page1
                = LayeredLayout.encloseIn(
                        image,
                        overlay
                       
                );

        swipe.addTab("", page1);
    }

    @SuppressWarnings("empty-statement")
    private void addButton(Image img, String nom,String prenom, int id,  Resources res) {
        int height = Display.getInstance().convertToPixels(11.5f);
        int width = Display.getInstance().convertToPixels(14f);
        Button image = new Button(img.fill(width, height));
        image.setUIID("Label");
        Container cn = BorderLayout.west(image);
        
        TextArea ta = new TextArea(nom+" "+prenom);
        ta.setUIID("NewsTopLine");
        ta.setEditable(false);

        Button detail = new Button("DÃ©tail", "NewsBottomLine");
         detail.setTextPosition(RIGHT);
        //if(!liked) {
          FontImage.setMaterialIcon(detail, FontImage.MATERIAL_INFO);
        //} else {
        //   Style s = new Style(likes.getUnselectedStyle());
        //    s.setFgColor(0xff2d55);
       
    
        Button editer = new Button("Modifier", "NewsBottomLine");
        FontImage.setMaterialIcon(editer, FontImage.MATERIAL_EDIT);
        // reserver.setTextPosition(LEFT);

        cn.add(BorderLayout.CENTER,
                BoxLayout.encloseY(
                        ta,
                        BoxLayout.encloseX(detail, editer)
                ));

        add(cn);
     

      
       
        //image.addActionListener(e -> ToastBar.showMessage(title, FontImage.MATERIAL_INFO));
        Enfant enfant=ServiceJardin.getInstance().getEnfantJardin(id);
        String detail_enfant="Nom : "+enfant.getNom()+ "\n" +"Prenom : "+enfant.getPrenom()+ "\n"+"Age : "+enfant.getAge()+"\n"+"Categorie : "+enfant.getCategorie();
        detail.addActionListener(e -> {
         ToastBar.showMessage(detail_enfant, FontImage.MATERIAL_INFO);

        });
        
        editer.addActionListener(e -> {
           // RatingWidget.bindRatingListener(res, 180, id, "apps@codenameone.com");
           id_enfant = enfant.getId();
        new ModifierEnfantFrom(res).show();
        });
    }

  

    private void initStarRankStyle(Style s, Image star) {
        s.setBackgroundType(Style.BACKGROUND_IMAGE_TILE_BOTH);
        s.setBorder(Border.createEmpty());
        s.setBgImage(star);
        s.setBgTransparency(0);
    }

    private void bindButtonSelection(Button b, Label arrow) {
        b.addActionListener(e -> {
            if (b.isSelected()) {
                updateArrowPosition(b, arrow);
            }
        });
    }

   

  
}
